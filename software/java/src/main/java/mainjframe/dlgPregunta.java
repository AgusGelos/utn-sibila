/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainjframe;

import api.ElementoExamen;
import api.Pregunta;
import api.Termino;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import ortografia.LangTools;

/**
 *
 * @author Analia
 */
public class dlgPregunta extends javax.swing.JDialog {

    /**
     * Creates new form dlgPregunta
     */
    private Pregunta pregunta;
    
    public dlgPregunta(java.awt.Frame parent, boolean modal, Pregunta pregunta) {
        super(parent, modal);
        initComponents();
        
        this.pregunta = pregunta;
        
        loadPregunta();
    }

    private void loadPregunta()
    {
        txtTexto.setText(pregunta.getTexto());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtTexto = new javax.swing.JTextArea();
        btnCanelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnGrabar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btnOrtografia = new javax.swing.JButton();

        setTitle("Edición de Pregunta");

        txtTexto.setColumns(20);
        txtTexto.setLineWrap(true);
        txtTexto.setRows(5);
        txtTexto.setText("El paradigma poo se basa en objeto que usa atributo y su característica es herencia y polimorfismo");
        txtTexto.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtTexto);

        btnCanelar.setText("Cancelar");
        btnCanelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Escriba la pregunta:");

        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        txtLog.setEditable(false);
        txtLog.setBackground(new java.awt.Color(255, 255, 204));
        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtLog);

        jLabel2.setText("Análisis ortográfico");

        btnOrtografia.setText("Verificar la ortografía");
        btnOrtografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrtografiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnOrtografia, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCanelar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCanelar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOrtografia, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCanelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCanelarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        try {
            /// graba el texto en la pregunta
            if (ValidarOrtografia())
            {
                pregunta.setTexto(txtTexto.getText());
                this.dispose();
            }
        }
        catch (IOException ex) {
            Logger.getLogger(dlgPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnOrtografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrtografiaActionPerformed
        try {
            ValidarOrtografia ();
        }
        catch (IOException ex) {
            Logger.getLogger(dlgPregunta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOrtografiaActionPerformed

    private boolean ValidarOrtografia() throws IOException
    {
        LangTools lt = new LangTools();
        Pregunta p = lt.CheckOrtografia(txtTexto.getText());
        setSOUTText (p);
        return !p.hasErrors();
    }
    
    public Pregunta getPregunta()
    {
        return pregunta;
    }
    
    public void setSOUTText(ElementoExamen elemento) {

        // Primero borrar el log
        txtLog.setText("");
        ArrayList<Termino> terminos = elemento.getTerminos();
        StringBuilder bld = new StringBuilder();
        bld.append(String.format("Cantidad de palabras: %d\n", terminos.size()));
        for (Termino termino : terminos) {
            if (termino.hasErrors()) {
                String item = String.format("Error en la palabra: %s\n  - Corrección sugerida: %s\n", termino.getNombre(), termino.getSugerenciasCorreccion());
                bld.append(item);
            }
        }
        if (!elemento.hasErrors()) {
            bld.append("El texto NO contiene errores.");
        }
        
        txtLog.setText(bld.toString());
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCanelar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnOrtografia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextArea txtTexto;
    // End of variables declaration//GEN-END:variables
}
